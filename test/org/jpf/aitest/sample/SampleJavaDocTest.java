package org.jpf.aitest.sample;

import static org.junit.Assert.fail;
import org.junit.Test;
import static org.junit.Assert.assertTrue;
import static org.jpf.aitest.runtime.WriteException.WritePrivateException;

/**
* The class <code>SampleJavaDocTest</code> contains tests for the class <code>{@link SampleJavaDoc}</code>.
* <p>
* Copyright (c) 2017
* 
* @generatedBy wupf@asiainfo.com at 2018-04-17 07:09:54
* @author Administrator
* @version $Revision: 1.0 $
*/

public class SampleJavaDocTest  {


  /**
  * Run the SampleJavaDoc method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:09:54
  *@see  Modifier=1   SampleJavaDoc)
  */
  @Test(timeout=1000)

  public void testSampleJavaDoc_2 () throws Exception
   {

    SampleJavaDoc result = new SampleJavaDoc();

    assertNotNull(result);

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:01
  *@see  Modifier=1  int add(int i,int j)
  */
  @Test(timeout=1000)

  public void test_add_Doc3() throws Exception
  {

    try{

    int i =  1;
    int j =  2;

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

    assertEquals(result,3);
    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:01
  *@see  Modifier=1  int add(int i,int j)
  */
  @Test(timeout=1000)

  public void test_add_R4() throws Exception
  {

    try{

    int i =  Integer.MAX_VALUE;
    int j =  Integer.MAX_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:01
  *@see  Modifier=1  int add(int i,int j)
  */
  @Test(timeout=1000)

  public void test_add_R5() throws Exception
  {

    try{

    int i =  Integer.MAX_VALUE;
    int j =  Integer.MIN_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:01
  *@see  Modifier=1  int add(int i,int j)
  */
  @Test(timeout=1000)

  public void test_add_R6() throws Exception
  {

    try{

    int i =  Integer.MAX_VALUE;
    int j =  0;

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:01
  *@see  Modifier=1  int add(int i,int j)
  */
  @Test(timeout=1000)

  public void test_add_R7() throws Exception
  {

    try{

    int i =  Integer.MAX_VALUE;
    char j =  'a';

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:01
  *@see  Modifier=1  int add(int i,int j)
  */
  @Test(timeout=1000)

  public void test_add_R8() throws Exception
  {

    try{

    int i =  Integer.MIN_VALUE;
    int j =  Integer.MAX_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  int add(String i,int j)
  */
  @Test(timeout=1000)

  public void test_add_Doc9() throws Exception
  {

    try{

    String i =  "1";
    int j =  2;

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

    assertEquals(result,3);
    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  int add(String i,int j)
  */
  @Test(timeout=1000)

  public void test_add_R10() throws Exception
  {

    try{

    String i =  "abc123";
    int j =  Integer.MAX_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  int add(String i,int j)
  */
  @Test(timeout=1000)

  public void test_add_R11() throws Exception
  {

    try{

    String i =  "abc123";
    int j =  Integer.MIN_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  int add(String i,int j)
  */
  @Test(timeout=1000)

  public void test_add_R12() throws Exception
  {

    try{

    String i =  "abc123";
    int j =  0;

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  int add(String i,int j)
  */
  @Test(timeout=1000)

  public void test_add_R13() throws Exception
  {

    try{

    String i =  "abc123";
    char j =  'a';

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  int add(String i,int j)
  */
  @Test(timeout=1000)

  public void test_add_R14() throws Exception
  {

    try{

    String i =  "123";
    int j =  Integer.MAX_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    int  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j)
  */
  @Test(timeout=1000)

  public void test_add_Doc15() throws Exception
  {

    try{

    String i =  "1";
    String j =  "2";

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j);

    assertEquals(result,"3");
    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j)
  */
  @Test(timeout=1000)

  public void test_add_R16() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "abc123";

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j)
  */
  @Test(timeout=1000)

  public void test_add_R17() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "123";

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j)
  */
  @Test(timeout=1000)

  public void test_add_R18() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "中文";

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j)
  */
  @Test(timeout=1000)

  public void test_add_R19() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "中文123abc";

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j)
  */
  @Test(timeout=1000)

  public void test_add_R20() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "!@#$%^&*";

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j,int ACCOUNTPAGEQUERYLOGID)
  */
  @Test(timeout=1000)

  public void test_add_R21() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "abc123";
    int ACCOUNTPAGEQUERYLOGID =  Integer.MAX_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j,ACCOUNTPAGEQUERYLOGID);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j,int ACCOUNTPAGEQUERYLOGID)
  */
  @Test(timeout=1000)

  public void test_add_R22() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "abc123";
    int ACCOUNTPAGEQUERYLOGID =  Integer.MIN_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j,ACCOUNTPAGEQUERYLOGID);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j,int ACCOUNTPAGEQUERYLOGID)
  */
  @Test(timeout=1000)

  public void test_add_R23() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "abc123";
    int ACCOUNTPAGEQUERYLOGID =  0;

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j,ACCOUNTPAGEQUERYLOGID);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j,int ACCOUNTPAGEQUERYLOGID)
  */
  @Test(timeout=1000)

  public void test_add_R24() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "abc123";
    char ACCOUNTPAGEQUERYLOGID =  'a';

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j,ACCOUNTPAGEQUERYLOGID);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add(String i,String j,int ACCOUNTPAGEQUERYLOGID)
  */
  @Test(timeout=1000)

  public void test_add_R25() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "123";
    int ACCOUNTPAGEQUERYLOGID =  Integer.MAX_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add(i,j,ACCOUNTPAGEQUERYLOGID);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add_nlp method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add_nlp(String i,String j,int PAGEQUERYLOGID)
  */
  @Test(timeout=1000)

  public void test_add_nlp_R26() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "abc123";
    int PAGEQUERYLOGID =  Integer.MAX_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add_nlp(i,j,PAGEQUERYLOGID);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add_nlp method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add_nlp(String i,String j,int PAGEQUERYLOGID)
  */
  @Test(timeout=1000)

  public void test_add_nlp_R27() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "abc123";
    int PAGEQUERYLOGID =  Integer.MIN_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add_nlp(i,j,PAGEQUERYLOGID);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add_nlp method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add_nlp(String i,String j,int PAGEQUERYLOGID)
  */
  @Test(timeout=1000)

  public void test_add_nlp_R28() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "abc123";
    int PAGEQUERYLOGID =  0;

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add_nlp(i,j,PAGEQUERYLOGID);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add_nlp method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add_nlp(String i,String j,int PAGEQUERYLOGID)
  */
  @Test(timeout=1000)

  public void test_add_nlp_R29() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "abc123";
    char PAGEQUERYLOGID =  'a';

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add_nlp(i,j,PAGEQUERYLOGID);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the add_nlp method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  String add_nlp(String i,String j,int PAGEQUERYLOGID)
  */
  @Test(timeout=1000)

  public void test_add_nlp_R30() throws Exception
  {

    try{

    String i =  "abc123";
    String j =  "123";
    int PAGEQUERYLOGID =  Integer.MAX_VALUE;

    SampleJavaDoc fixture = new SampleJavaDoc();

    String  result=
  fixture.add_nlp(i,j,PAGEQUERYLOGID);

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



  /**
  * Run the timeout method test.
  *
  * @throws Exception
  * 
  * @generated By wupf@asiainfo.com 
  * @generated at 2018-04-17 07:10:02
  *@see  Modifier=1  void timeout)
  */
  @Test(timeout=1000)

  public void test_timeout_W31() throws Exception
  {

    try{

    SampleJavaDoc fixture = new SampleJavaDoc();

  fixture.timeout();

   //请在这里增加检查点:比如 assertEquals(true, result);
    assertTrue(true);

    }catch(Exception ex){
      WritePrivateException(ex,Thread.currentThread().getStackTrace(),true);
      ex.printStackTrace();
      fail();
    }

  }



}